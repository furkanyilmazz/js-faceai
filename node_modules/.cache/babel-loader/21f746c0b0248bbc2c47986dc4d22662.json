{"ast":null,"code":"var _jsxFileName = \"/Users/a2017/Documents/GitHub/js-faceai/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport \"./App.css\";\nimport * as faceapi from 'face-api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const video = document.getElementById(\"video\");\n  const [initializing, setInitializing] = useState(false);\n  const videoRef = useRef();\n  const canvasRef = useRef();\n  useEffect(() => {\n    const loadModels = async () => {\n      const MODEL_URL = process.env.PUBLIC_URL + '/models';\n      setInitializing(true);\n      Promise.all([faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL), faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL), faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL), faceapi.nets.faceExpressionNet.loadFromUri(MODEL_URL)]).then(startVideo());\n    };\n\n    loadModels();\n\n    const startVideo = () => {\n      navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n      navigator.getUserMedia({\n        video: {}\n      }, function (stream) {\n        video.srcObject = stream;\n        video.play();\n      }, function (err) {\n        console.log(\"hata: \" + err.name);\n      });\n    };\n\n    video.addEventListener(\"play\", () => {\n      const canvas = faceapi.createCanvasFromMedia(video);\n      document.body.append(canvas);\n      const boxSize = {\n        width: video.width,\n        heigth: video.height\n      };\n      faceapi.matchDimensions(canvas, boxSize);\n      setInterval(async () => {\n        if (initializing) {\n          setInitializing(false);\n        }\n\n        const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceExpressions();\n        canvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height);\n        const resizedDetections = faceapi.resizeResults(detections, boxSize);\n        faceapi.draw.drawDetections(canvas, resizedDetections);\n        faceapi.draw.drawFaceLandmarks(canvas, resizedDetections);\n        faceapi.draw.drawFaceExpressions(canvas, resizedDetections); //console.log(detections);\n      }, 100);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: initializing ? \"Initializing\" : \"Ready\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        id: \"video\",\n        className: \"video\",\n        ref: videoRef,\n        autoPlay: true,\n        muted: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Xg6yX5IqQ2Gk/jClXeKvvsq5YQk=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/a2017/Documents/GitHub/js-faceai/src/App.js"],"names":["React","useEffect","useState","useRef","faceapi","App","video","document","getElementById","initializing","setInitializing","videoRef","canvasRef","loadModels","MODEL_URL","process","env","PUBLIC_URL","Promise","all","nets","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","faceExpressionNet","then","startVideo","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","stream","srcObject","play","err","console","log","name","addEventListener","canvas","createCanvasFromMedia","body","append","boxSize","width","heigth","height","matchDimensions","setInterval","detections","detectAllFaces","TinyFaceDetectorOptions","withFaceLandmarks","withFaceExpressions","getContext","clearRect","resizedDetections","resizeResults","draw","drawDetections","drawFaceLandmarks","drawFaceExpressions"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAO,WAAP;AAEA,OAAO,KAAKC,OAAZ,MAAyB,aAAzB;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAd;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAMS,QAAQ,GAAGR,MAAM,EAAvB;AACA,QAAMS,SAAS,GAAGT,MAAM,EAAxB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,UAAU,GAAG,YAAY;AAC7B,YAAMC,SAAS,GAAGC,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,SAA3C;AACAP,MAAAA,eAAe,CAAC,IAAD,CAAf;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,CACVf,OAAO,CAACgB,IAAR,CAAaC,gBAAb,CAA8BC,WAA9B,CAA0CR,SAA1C,CADU,EAEVV,OAAO,CAACgB,IAAR,CAAaG,iBAAb,CAA+BD,WAA/B,CAA2CR,SAA3C,CAFU,EAGVV,OAAO,CAACgB,IAAR,CAAaI,kBAAb,CAAgCF,WAAhC,CAA4CR,SAA5C,CAHU,EAIVV,OAAO,CAACgB,IAAR,CAAaK,iBAAb,CAA+BH,WAA/B,CAA2CR,SAA3C,CAJU,CAAZ,EAKGY,IALH,CAKQC,UAAU,EALlB;AAMD,KATD;;AAUAd,IAAAA,UAAU;;AAIV,UAAMc,UAAU,GAAG,MAAM;AACvBC,MAAAA,SAAS,CAACC,YAAV,GAAyBD,SAAS,CAACC,YAAV,IACvBD,SAAS,CAACE,kBADa,IAEvBF,SAAS,CAACG,eAFZ;AAIAH,MAAAA,SAAS,CAACC,YAAV,CACE;AACEvB,QAAAA,KAAK,EAAE;AADT,OADF,EAIE,UAAU0B,MAAV,EAAkB;AAChB1B,QAAAA,KAAK,CAAC2B,SAAN,GAAkBD,MAAlB;AACA1B,QAAAA,KAAK,CAAC4B,IAAN;AACD,OAPH,EAQE,UAAUC,GAAV,EAAe;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAWF,GAAG,CAACG,IAA3B;AACD,OAVH;AAYD,KAjBD;;AAmBAhC,IAAAA,KAAK,CAACiC,gBAAN,CAAuB,MAAvB,EAA+B,MAAM;AACnC,YAAMC,MAAM,GAAGpC,OAAO,CAACqC,qBAAR,CAA8BnC,KAA9B,CAAf;AACAC,MAAAA,QAAQ,CAACmC,IAAT,CAAcC,MAAd,CAAqBH,MAArB;AACA,YAAMI,OAAO,GAAG;AACdC,QAAAA,KAAK,EAAEvC,KAAK,CAACuC,KADC;AAEdC,QAAAA,MAAM,EAAExC,KAAK,CAACyC;AAFA,OAAhB;AAKA3C,MAAAA,OAAO,CAAC4C,eAAR,CAAwBR,MAAxB,EAAgCI,OAAhC;AAEAK,MAAAA,WAAW,CAAC,YAAY;AACtB,YAAIxC,YAAJ,EAAkB;AAChBC,UAAAA,eAAe,CAAC,KAAD,CAAf;AACD;;AAED,cAAMwC,UAAU,GAAG,MAAM9C,OAAO,CAAC+C,cAAR,CAAuB7C,KAAvB,EAA8B,IAAIF,OAAO,CAACgD,uBAAZ,EAA9B,EAAqEC,iBAArE,GAAyFC,mBAAzF,EAAzB;AACAd,QAAAA,MAAM,CAACe,UAAP,CAAkB,IAAlB,EAAwBC,SAAxB,CAAkC,CAAlC,EAAqC,CAArC,EAAwChB,MAAM,CAACK,KAA/C,EAAsDL,MAAM,CAACO,MAA7D;AACA,cAAMU,iBAAiB,GAAGrD,OAAO,CAACsD,aAAR,CAAsBR,UAAtB,EAAkCN,OAAlC,CAA1B;AACAxC,QAAAA,OAAO,CAACuD,IAAR,CAAaC,cAAb,CAA4BpB,MAA5B,EAAoCiB,iBAApC;AACArD,QAAAA,OAAO,CAACuD,IAAR,CAAaE,iBAAb,CAA+BrB,MAA/B,EAAuCiB,iBAAvC;AACArD,QAAAA,OAAO,CAACuD,IAAR,CAAaG,mBAAb,CAAiCtB,MAAjC,EAAyCiB,iBAAzC,EAVsB,CAWtB;AACD,OAZU,EAYR,GAZQ,CAAX;AAaD,KAvBD;AAyBD,GA3DQ,CAAT;AA6DA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAA,gBAAOhD,YAAY,GAAG,cAAH,GAAoB;AAAvC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AAAO,QAAA,EAAE,EAAC,OAAV;AAAkB,QAAA,SAAS,EAAC,OAA5B;AAAoC,QAAA,GAAG,EAAEE,QAAzC;AAAmD,QAAA,QAAQ,MAA3D;AAA4D,QAAA,KAAK;AAAjE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,GAAG,EAAEC;AAAb;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA5EuBP,G;;KAAAA,G","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport \"./App.css\";\n\nimport * as faceapi from 'face-api.js';\n\nexport default function App() {\n  const video = document.getElementById(\"video\");\n  const [initializing, setInitializing] = useState(false)\n  const videoRef = useRef();\n  const canvasRef = useRef();\n\n  useEffect(() => {\n    const loadModels = async () => {\n      const MODEL_URL = process.env.PUBLIC_URL + '/models';\n      setInitializing(true);\n      Promise.all([\n        faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL),\n        faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),\n        faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL),\n        faceapi.nets.faceExpressionNet.loadFromUri(MODEL_URL)\n      ]).then(startVideo())\n    }\n    loadModels();\n\n\n\n    const startVideo = () => {\n      navigator.getUserMedia = navigator.getUserMedia ||\n        navigator.webkitGetUserMedia ||\n        navigator.mozGetUserMedia;\n\n      navigator.getUserMedia(\n        {\n          video: {},\n        },\n        function (stream) {\n          video.srcObject = stream;\n          video.play();\n        },\n        function (err) {\n          console.log(\"hata: \" + err.name);\n        }\n      );\n    }\n\n    video.addEventListener(\"play\", () => {\n      const canvas = faceapi.createCanvasFromMedia(video);\n      document.body.append(canvas);\n      const boxSize = {\n        width: video.width,\n        heigth: video.height\n      }\n\n      faceapi.matchDimensions(canvas, boxSize);\n\n      setInterval(async () => {\n        if (initializing) {\n          setInitializing(false);\n        }\n\n        const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceExpressions();\n        canvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height);\n        const resizedDetections = faceapi.resizeResults(detections, boxSize);\n        faceapi.draw.drawDetections(canvas, resizedDetections);\n        faceapi.draw.drawFaceLandmarks(canvas, resizedDetections);\n        faceapi.draw.drawFaceExpressions(canvas, resizedDetections)\n        //console.log(detections);\n      }, 100)\n    })\n\n  });\n\n  return (\n    <div className=\"main\">\n      <span>{initializing ? \"Initializing\" : \"Ready\"}</span>\n      <div>\n        <video id=\"video\" className=\"video\" ref={videoRef} autoPlay muted />\n        <canvas ref={canvasRef} />\n      </div>\n    </div>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}