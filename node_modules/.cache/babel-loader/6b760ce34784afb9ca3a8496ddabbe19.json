{"ast":null,"code":"var _jsxFileName = \"/Users/a2017/Documents/GitHub/js-faceai/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport \"./App.css\";\nimport * as faceapi from 'face-api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  Promise.all([faceapi.nets.tinyFaceDetector.loadFromUri(\"./models\"), faceapi.nets.faceLandmark68Net.loadFromUri(\"./models\"), faceapi.nets.faceRecognitionNet.loadFromUri(\"./models\"), faceapi.nets.faceExpressionNet.loadFromUri(\"./models\")]).then();\n  useEffect(() => {\n    function startCamera() {\n      navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n\n      if (navigator.getUserMedia) {\n        navigator.getUserMedia({\n          audio: false,\n          video: {\n            width: 1280,\n            height: 720\n          }\n        }, function (stream) {\n          var video = document.querySelector('video');\n          video.srcObject = stream;\n\n          video.onloadedmetadata = function (e) {};\n        }, function (err) {\n          console.log(\"The following error occurred: \" + err.name);\n        });\n      } else {\n        console.log(\"getUserMedia not supported\");\n      }\n    }\n\n    startCamera();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: /*#__PURE__*/_jsxDEV(\"video\", {\n      id: \"video\",\n      width: \"1280\",\n      height: \"720\",\n      autoplay: true,\n      muted: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/a2017/Documents/GitHub/js-faceai/src/App.js"],"names":["React","useEffect","faceapi","App","Promise","all","nets","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","faceExpressionNet","then","startCamera","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","audio","video","width","height","stream","document","querySelector","srcObject","onloadedmetadata","e","err","console","log","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AAEA,OAAO,KAAKC,OAAZ,MAAyB,aAAzB;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAE5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,CACVH,OAAO,CAACI,IAAR,CAAaC,gBAAb,CAA8BC,WAA9B,CAA0C,UAA1C,CADU,EAEVN,OAAO,CAACI,IAAR,CAAaG,iBAAb,CAA+BD,WAA/B,CAA2C,UAA3C,CAFU,EAGVN,OAAO,CAACI,IAAR,CAAaI,kBAAb,CAAgCF,WAAhC,CAA4C,UAA5C,CAHU,EAIVN,OAAO,CAACI,IAAR,CAAaK,iBAAb,CAA+BH,WAA/B,CAA2C,UAA3C,CAJU,CAAZ,EAKGI,IALH;AAOAX,EAAAA,SAAS,CAAC,MAAM;AAEd,aAASY,WAAT,GAAuB;AACrBC,MAAAA,SAAS,CAACC,YAAV,GAAyBD,SAAS,CAACC,YAAV,IACvBD,SAAS,CAACE,kBADa,IAEvBF,SAAS,CAACG,eAFZ;;AAIA,UAAIH,SAAS,CAACC,YAAd,EAA4B;AAC1BD,QAAAA,SAAS,CAACC,YAAV,CAAuB;AAAEG,UAAAA,KAAK,EAAE,KAAT;AAAgBC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE,IAAT;AAAeC,YAAAA,MAAM,EAAE;AAAvB;AAAvB,SAAvB,EACE,UAAUC,MAAV,EAAkB;AAChB,cAAIH,KAAK,GAAGI,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAZ;AACAL,UAAAA,KAAK,CAACM,SAAN,GAAkBH,MAAlB;;AACAH,UAAAA,KAAK,CAACO,gBAAN,GAAyB,UAAUC,CAAV,EAAa,CACrC,CADD;AAED,SANH,EAOE,UAAUC,GAAV,EAAe;AACbC,UAAAA,OAAO,CAACC,GAAR,CAAY,mCAAmCF,GAAG,CAACG,IAAnD;AACD,SATH;AAWD,OAZD,MAYO;AACLF,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD;AACF;;AACDjB,IAAAA,WAAW;AACZ,GAxBQ,CAAT;AA0BA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE;AAAO,MAAA,EAAE,EAAC,OAAV;AAAkB,MAAA,KAAK,EAAC,MAAxB;AAA+B,MAAA,MAAM,EAAC,KAAtC;AAA4C,MAAA,QAAQ,MAApD;AAAqD,MAAA,KAAK;AAA1D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAxCuBV,G;;KAAAA,G","sourcesContent":["import React, { useEffect } from 'react';\nimport \"./App.css\";\n\nimport * as faceapi from 'face-api.js';\n\nexport default function App() {\n\n  Promise.all([\n    faceapi.nets.tinyFaceDetector.loadFromUri(\"./models\"),\n    faceapi.nets.faceLandmark68Net.loadFromUri(\"./models\"),\n    faceapi.nets.faceRecognitionNet.loadFromUri(\"./models\"),\n    faceapi.nets.faceExpressionNet.loadFromUri(\"./models\")\n  ]).then()\n\n  useEffect(() => {\n\n    function startCamera() {\n      navigator.getUserMedia = navigator.getUserMedia ||\n        navigator.webkitGetUserMedia ||\n        navigator.mozGetUserMedia;\n\n      if (navigator.getUserMedia) {\n        navigator.getUserMedia({ audio: false, video: { width: 1280, height: 720 }, },\n          function (stream) {\n            var video = document.querySelector('video');\n            video.srcObject = stream;\n            video.onloadedmetadata = function (e) {\n            };\n          },\n          function (err) {\n            console.log(\"The following error occurred: \" + err.name);\n          }\n        );\n      } else {\n        console.log(\"getUserMedia not supported\");\n      }\n    }\n    startCamera();\n  });\n\n  return (\n    <div className=\"main\">\n      <video id=\"video\" width=\"1280\" height=\"720\" autoplay muted ></video>\n    </div>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}