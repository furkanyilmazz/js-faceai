{"ast":null,"code":"var _jsxFileName = \"/Users/a2017/Documents/GitHub/js-faceai/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport \"./App.css\";\nimport * as faceapi from 'face-api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const video = document.getElementById(\"video\");\n  const videoHeight = 720;\n  const videoWidth = 1280;\n  const [initializing, setInitializing] = useState(false);\n  const videoRef = useRef();\n  const canvasRef = useRef();\n  useEffect(() => {\n    const loadModels = async () => {\n      const MODEL_URL = process.env.PUBLIC_URL + '/models';\n      setInitializing(true);\n      Promise.all([faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL), faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL), faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL), faceapi.nets.faceExpressionNet.loadFromUri(MODEL_URL)]).then(startVideo);\n    };\n\n    loadModels();\n  }, []);\n\n  const startVideo = () => {\n    navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n    navigator.getUserMedia({\n      video: {}\n    }, function (stream) {\n      video.srcObject = stream;\n      video.play();\n    }, function (err) {\n      console.log(\"hata: \" + err.name);\n    });\n  };\n\n  video.addEventListener(\"play\", () => {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: initializing ? \"Initializing\" : \"Ready\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        id: \"video\",\n        className: \"video\",\n        ref: videoRef,\n        autoPlay: true,\n        muted: true,\n        height: videoHeight,\n        width: videoWidth,\n        onPlay: handleVideoOnPlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Xg6yX5IqQ2Gk/jClXeKvvsq5YQk=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/a2017/Documents/GitHub/js-faceai/src/App.js"],"names":["React","useEffect","useState","useRef","faceapi","App","video","document","getElementById","videoHeight","videoWidth","initializing","setInitializing","videoRef","canvasRef","loadModels","MODEL_URL","process","env","PUBLIC_URL","Promise","all","nets","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","faceExpressionNet","then","startVideo","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","stream","srcObject","play","err","console","log","name","addEventListener","handleVideoOnPlay"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAO,WAAP;AAEA,OAAO,KAAKC,OAAZ,MAAyB,aAAzB;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAd;AACA,QAAMC,WAAW,GAAG,GAApB;AACA,QAAMC,UAAU,GAAG,IAAnB;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAMW,QAAQ,GAAGV,MAAM,EAAvB;AACA,QAAMW,SAAS,GAAGX,MAAM,EAAxB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,UAAU,GAAG,YAAY;AAC7B,YAAMC,SAAS,GAAGC,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,SAA3C;AACAP,MAAAA,eAAe,CAAC,IAAD,CAAf;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,CACVjB,OAAO,CAACkB,IAAR,CAAaC,gBAAb,CAA8BC,WAA9B,CAA0CR,SAA1C,CADU,EAEVZ,OAAO,CAACkB,IAAR,CAAaG,iBAAb,CAA+BD,WAA/B,CAA2CR,SAA3C,CAFU,EAGVZ,OAAO,CAACkB,IAAR,CAAaI,kBAAb,CAAgCF,WAAhC,CAA4CR,SAA5C,CAHU,EAIVZ,OAAO,CAACkB,IAAR,CAAaK,iBAAb,CAA+BH,WAA/B,CAA2CR,SAA3C,CAJU,CAAZ,EAKGY,IALH,CAKQC,UALR;AAMD,KATD;;AAUAd,IAAAA,UAAU;AACX,GAZQ,EAYN,EAZM,CAAT;;AAcA,QAAMc,UAAU,GAAG,MAAM;AACvBC,IAAAA,SAAS,CAACC,YAAV,GAAyBD,SAAS,CAACC,YAAV,IACvBD,SAAS,CAACE,kBADa,IAEvBF,SAAS,CAACG,eAFZ;AAIAH,IAAAA,SAAS,CAACC,YAAV,CACE;AACEzB,MAAAA,KAAK,EAAE;AADT,KADF,EAIE,UAAU4B,MAAV,EAAkB;AAChB5B,MAAAA,KAAK,CAAC6B,SAAN,GAAkBD,MAAlB;AACA5B,MAAAA,KAAK,CAAC8B,IAAN;AACD,KAPH,EAQE,UAAUC,GAAV,EAAe;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAWF,GAAG,CAACG,IAA3B;AACD,KAVH;AAcD,GAnBD;;AAsBAlC,EAAAA,KAAK,CAACmC,gBAAN,CAAuB,MAAvB,EAA+B,MAAM,CAEpC,CAFD;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAA,gBAAO9B,YAAY,GAAG,cAAH,GAAoB;AAAvC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AAAO,QAAA,EAAE,EAAC,OAAV;AAAkB,QAAA,SAAS,EAAC,OAA5B;AAAoC,QAAA,GAAG,EAAEE,QAAzC;AAAmD,QAAA,QAAQ,MAA3D;AAA4D,QAAA,KAAK,MAAjE;AAAkE,QAAA,MAAM,EAAEJ,WAA1E;AAAuF,QAAA,KAAK,EAAEC,UAA9F;AAA0G,QAAA,MAAM,EAAEgC;AAAlH;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,GAAG,EAAE5B;AAAb;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAzDuBT,G;;KAAAA,G","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport \"./App.css\";\n\nimport * as faceapi from 'face-api.js';\n\nexport default function App() {\n  const video = document.getElementById(\"video\");\n  const videoHeight = 720;\n  const videoWidth = 1280;\n  const [initializing, setInitializing] = useState(false)\n  const videoRef = useRef();\n  const canvasRef = useRef();\n\n  useEffect(() => {\n    const loadModels = async () => {\n      const MODEL_URL = process.env.PUBLIC_URL + '/models';\n      setInitializing(true);\n      Promise.all([\n        faceapi.nets.tinyFaceDetector.loadFromUri(MODEL_URL),\n        faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),\n        faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL),\n        faceapi.nets.faceExpressionNet.loadFromUri(MODEL_URL)\n      ]).then(startVideo)\n    }\n    loadModels();\n  }, []);\n\n  const startVideo = () => {\n    navigator.getUserMedia = navigator.getUserMedia ||\n      navigator.webkitGetUserMedia ||\n      navigator.mozGetUserMedia;\n\n    navigator.getUserMedia(\n      {\n        video: {},\n      },\n      function (stream) {\n        video.srcObject = stream;\n        video.play();\n      },\n      function (err) {\n        console.log(\"hata: \" + err.name);\n      }\n    );\n\n\n  }\n\n\n  video.addEventListener(\"play\", () => {\n\n  });\n\n  return (\n    <div className=\"main\">\n      <span>{initializing ? \"Initializing\" : \"Ready\"}</span>\n      <div>\n        <video id=\"video\" className=\"video\" ref={videoRef} autoPlay muted height={videoHeight} width={videoWidth} onPlay={handleVideoOnPlay} />\n        <canvas ref={canvasRef} />\n      </div>\n    </div>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}